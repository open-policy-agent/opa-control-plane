# local example git repo
cd repo
env HOME=.
exec git init .
exec git branch -m main
exec git config --global user.name "botbotbot"
exec git config --global user.email "bot@bot.bot"
exec git add .
exec git commit -m initial-commit
cd ..

exec $OPACTL build --config config.d/bundle.yml --data-dir tmp
stderr '^1/1 bundles built and pushed successfully$'
! stdout .

exec tar tf bundles/a.tar.gz
cmp stdout exp/tarball

exec tar xf bundles/a.tar.gz
cmp data.json exp/data.json
cmp .manifest exp/.manifest
cmp git-local/nested/policies/authz.rego exp/policy.rego

-- repo/nested/policies/authz.rego --
package deeply.nested.authz
import rego.v1
allow if {
  some user in data.users
  user.id == input.user
}
-- repo/unrelated.yaml --
ignore: me
-- repo/deeply/nested/users/data.json --
[
  {
    "id": "alice"
  },
  {
    "id": "bob"
  }
]
-- config.d/bundle.yml --
bundles:
  hello-world:
    object_storage:
      filesystem:
        path: bundles/a.tar.gz
    requirements:
    - source: git-local
      path: data.deeply.nested
      prefix: data
sources:
  git-local:
    git:
      repo: ./repo/
      reference: main
      excluded_files:
      - unrelated.yaml
-- exp/tarball --
/data.json
/git-local/nested/policies/authz.rego
/.manifest
-- exp/data.json --
{"users":[{"id":"alice"},{"id":"bob"}]}
-- exp/.manifest --
{"revision":"","roots":["authz","users"],"rego_version":0}
-- exp/policy.rego --
package authz

import rego.v1

allow if {
	some user in data.users
	user.id == input.user
}
