cases:
- note: config with stacks
  config: |
        {
          bundles: {
            TestSystem: {
              labels: {
                app: payments,
                env: production
              },
              object_storage: {
                aws: {
                  url: {{ .s3_url }},
                  bucket: test,
                  key: bundle.tar.gz,
                  region: mock-region,
                }
              },
              requirements: [{source: TestApp}]
            }
          },
          sources: {
            TestApp: {
              files: {
                "app.rego": {{ base64encode .app_rego }}
              },
              requirements: [
                {source: TestLibConflicts}
              ]
            },
            TestLib: {
              files: {
                "stacks/foo/foo.rego": {{ base64encode .lib_rego }}
              }
            },
            TestLibConflicts: {
              files: {
                "main.rego": {{ base64encode .main_rego }}
              }
            },
            TestLibUnused: {
              files: {
                "unused.rego": {{ base64encode .unused_rego }}
              }
            }
          },
          stacks: {
            TestStack: {
              selector: {
                env: [production]
              },
              requirements: [{source: TestLib}]
            },
            TestStackDoesNotMatch: {
              selector: {
                DONOTMATCH: []
              },
              requirements: [{source: TestLibUnused}]
            },
            TestStackExclusion: {
              selector: {
                env: [production],
              },
              exclude_selector: {
                app: [payments],
              },
              requirements: [{source: TestLibUnused}]
            }
          }
        }
  content_parameters:
    app_rego: &app_rego "package app\np := 7"
    lib_rego: &lib_rego "package stacks.foo\np := 8"
    main_rego: &main_rego |
                package main
                import future.keywords

                main := x if {
                  x := stack_result
                  x >= data.app.p
                } else := x {
                  x := data.app.p
                }

                stack_result := max([x | x := data.stacks[_].p])
    unused_rego: "package unused"
  expected_filesystem:
  - "/651b945976b07287063e8967060724a4/sources/TestApp/database/app.rego"
  - "/651b945976b07287063e8967060724a4/sources/TestLib/database/stacks/foo/foo.rego"
  - "/651b945976b07287063e8967060724a4/sources/TestLibConflicts/database/main.rego"
  expected_bundle:
    rego:
      TestApp/app.rego:            *app_rego
      TestLibConflicts/main.rego:  *main_rego
      TestLib/stacks/foo/foo.rego: *lib_rego
